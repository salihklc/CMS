@model CMS.Common.Models.ViewModels.Products.AddProductModel

<form id="create-product-form" asp-controller="Product" asp-action="Create"
      method="post" role="form" class="ajax-form" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-12">

            <div class="box box-danger">
                <div class="box-header with-border">
                    <h3 class="box-title">@SharedLocalizer["Product"] </h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    @Html.HiddenFor(x => x.InsertUserIdx)
                    @Html.HiddenFor(x => x.InsertDate)
                    @Html.HiddenFor(x => x.Idx)
                    <div class="form-group">
                        <label>@SharedLocalizer["ProductName_TR"]</label>
                        @Html.TextBoxFor(x => x.Name_TR, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Name_TR)
                    </div>

                    <div class="form-group">
                        <label>@SharedLocalizer["ProductName_EN"]</label>
                        @Html.TextBoxFor(x => x.Name_EN, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Name_EN)
                    </div>
                    <div class="form-group">
                        <label>@SharedLocalizer["Description_TR"]</label>
                        @Html.TextAreaFor(x => x.Description_TR, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Description_TR)
                    </div>
                    <div class="form-group">
                        <label>@SharedLocalizer["Description_EN"]</label>
                        @Html.TextAreaFor(x => x.Description_EN, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Description_EN)
                    </div>



                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>

    </div>
    <div class="row">
        <div class="col-md-12">

            <div class="box box-danger">
                <div class="box-header with-border">
                    <h3 class="box-title">@SharedLocalizer["Fields"] </h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body">


                    <div class="row">

                        <div class="dual-list list-left col-md-4">
                            <h4><strong>@SharedLocalizer["Fields"]</strong> </h4>
                            <div class="well" style="height:600px;overflow:auto;">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="input-group">
                                            <span class="input-group-addon glyphicon glyphicon-search"></span>
                                            <input type="text" class="form-control" name="SearchDualList" placeholder="search" />
                                        </div>
                                    </div>
                                </div>
                                <ul class="list-group fields connectedSortable list-ajax-data" data-url="@Url.Action("GetFieldsAllData","General",new { productIdx =Model.Idx})" id="sortable1"></ul>

                            </div>

                        </div>

                        <div class="dual-list list-right col-md-8">
                            <h4><strong>@SharedLocalizer["Product Fields"]</strong> </h4>
                            <div class="well" style="height:600px;overflow:auto;">

                                <ul class="list-group isselected connectedSortable  list-ajax-data" data-url="@Url.Action("GetSelectedFieldsAllData","General",new { productIdx =Model.Idx})" id="sortable2">
                                    @*@foreach (var field in Model.SelectedFields.FieldsModels)
                                    {
                                        <li class="list-group-item" data-Idx="@field.Idx">
                                            <div class="row">
                                                <div class="col-md-8">
                                                    @field.Name_TR
                                                </div>
                                                <div class="col-md-4">
                                                    @field.TypeName
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    Zorunlu: @field.IsRequired Max Length : @field.MaxLength Min Length: @field.MinLength
                                                </div>
                                            </div>
                                        </li>
                                    }*@
                                </ul>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>

    </div>
    <div class="row">
        <div class="col-md-12">
            <button type="button" onclick="SaveProduct()" class="btn btn-block btn-success btn-flat">@SharedLocalizer["Save"]</button>
        </div>
    </div>
</form>
<script type="text/javascript">
    $(function () {
        FieldListBox();
        $("#sortable1, #sortable2").sortable({
            connectWith: ".connectedSortable"
        }).disableSelection();
        var productFields = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SelectedFields.FieldsModels.Select(r=> r.Idx)))
            console.log(productFields);
        debugger;
        $.each(productFields, function (key, value) {
            $("#sortable1 li").find('[data-idx=' + value +']')
                .remove();
        });

    });

    function SaveProduct () {
        var form = objectifyform($('#create-product-form').serializeArray());
        var fields = new Array();
        $('#sortable2 li').each(function (i) {
            fields.push($(this).data('idx'));
            console.log($(this).data('idx'));
        });
        debugger;
        form.Fields = fields;
        var url = '@Url.Action("EditProduct","Product")';
        $.ajax({
            type: 'post',
            url: url,
            data: { model: form },
            success: function (resultData) {
                 if (resultData.IsSuccess) {
                                    Swal.fire(
                                        "Bilgi",
                                        resultData.Message,
                                        'success'
                                    ).then(() => {
                                        var purl = '@Url.Action("Products","Product")';
                                        window.location.href = purl;
                                    });
                } else {
                       Swal.fire(
                                        "Hata",
                                        resp.Message,
                                        'error'
                                    );
                }

            },
            error: function (xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
                console.log(errorMessage);
                if (xhr.status == 403) {
                    Swal.fire(
                        "Başarısız",
                        "Bu İşlemi Yapmaya Yetkiniz Bulunmamaktadır.",
                        'error'
                    )
                }
                else if (xhr.status != 200) {
                    CookieTimeOut();
                }
            }
        });
    }

</script>